#####################################################################
#  Homing definition
#####################################################################
#[homing_override]
#axes: z
#set_position_z: 0
#gcode:
#    SAVE_GCODE_STATE NAME=HOMING_state
#    M117 Homing..
#    G91                            ; relative positioning
#    G0 Z15 F540                    ; move up
#    G90                            ; absolute positioning
    # Home X and Y only for G28 or G28 XYZ
#    {% if 'Z' in params %}
#      {% if "x" not in printer.toolhead.homed_axes %}
#        G28 X
#      {% endif %}
#      {% if "y" not in printer.toolhead.homed_axes %}
#        G28 Y
#      {% endif %}
#    {% else %}
#      G28 X Y
#    {% endif %} 
#    ##	XY Location of the Z Endstop Switch
#    G0 X94 Y300 F6000            ; move to Z-Pin
#    G28 Z                          ; home Z
#    G0 Z30 F540                    ; move up
#    M117
#    RESTORE_GCODE_STATE NAME=HOMING_state

#####################################################################
#  Homing definition
#####################################################################
[homing_override]
axes: z
set_position_z: 0
gcode:
    SAVE_GCODE_STATE NAME=HOMING_state
    M117 Homing..

    ## reduce current and acceleration of motors
    _SET_ACC VAL=HOME
    _SET_Z_CURRENT VAL=HOME
    
    G91                            ; relative positioning
    G0 Z15 F540                    ; move up
    G90                            ; absolute positioning

    # Home X and Y only for G28 or G28 XYZ
    {% if 'Z' in params %}
      {% if "x" not in printer.toolhead.homed_axes %}
        G28 X
      {% endif %}
      {% if "y" not in printer.toolhead.homed_axes %}
        G28 Y
      {% endif %}
    {% else %}
      G28 X Y
    {% endif %} 

    ##	XY Location of the Z Endstop Switch
    G0 X94 Y300 F12000            ; move to Z-Pin
    G28 Z                          ; home Z
    G0 Z15 F540                    ; move up
    M117

    ## return to org current/acceleration settings
    {% if params.RESET_SETTINGS|default('true') == 'true' %}
      _SET_Z_CURRENT
      _SET_ACC
    {% endif %}

    RESTORE_GCODE_STATE NAME=HOMING_state

#####################################################################
#  Macros
#####################################################################
## conditional home
[gcode_macro _CG28]
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28 RESET_SETTINGS={ params.RESET_SETTINGS|default('true') }
  {% endif %}

[gcode_macro _SET_ACC]
variable_accel: 0
variable_accel_to_decel: 0
variable_last_val: 'RUN'
gcode:
  # set default parameter value
  {% set val = params.VAL|default(RUN)|string %}
  {% set homing_accel = 1200 %}
  
  {% if val == 'HOME' %}
    # store old values and apply home value
    SET_GCODE_VARIABLE MACRO=_SET_ACC VARIABLE=accel VALUE={printer.toolhead.max_accel}
    SET_GCODE_VARIABLE MACRO=_SET_ACC VARIABLE=accel_to_decel VALUE={printer.toolhead.max_accel_to_decel}
    {% set accel = homing_accel %}
    {% set accel_to_decel = homing_accel|int * 2 / 3 %}
  {% elif val == 'CONFIG' %}
    # set all to config values
    SET_GCODE_VARIABLE MACRO=_SET_ACC VARIABLE=accel VALUE={printer.configfile.settings.printer.max_accel}
    SET_GCODE_VARIABLE MACRO=_SET_ACC VARIABLE=accel_to_decel VALUE={printer.configfile.settings.printer.max_accel_to_decel}
    {% set accel = printer.configfile.settings.printer.max_accel %}
    {% set accel_to_decel = printer.configfile.settings.printer.max_accel_to_decel %}
  {% else %}
    # load stored values
    {% set accel = printer["gcode_macro _SET_ACC"].accel %}
    {% set accel_to_decel = printer["gcode_macro _SET_ACC"].accel_to_decel %}
  {% endif %}

  {% if val !=  printer["gcode_macro _SET_ACC"].last_val %}
    SET_GCODE_VARIABLE MACRO=_SET_ACC VARIABLE=last_val VALUE='"{val}"'
    {action_respond_info("VELOCITY_LIMIT set ACCEL: %d ACCEL_TO_DECEL: %d" % (accel|int, accel_to_decel|int))}
    SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel}
  {% endif %}

[gcode_macro _SET_Z_CURRENT]
variable_last_val: 'RUN'
gcode:
  # set default parameter value
  {% set val = params.VAL|default('RUN') %}
  {% if val == 'HOME' %}
    {% set xy_run  = 0.4 %}
    {% set xy_hold = 0.4 %}
    {% set z_run   = 0.3 %}
    {% set z_hold  = 0.3 %}
  {% else %}
    {% set xy_run  = printer.configfile.settings["tmc2209 stepper_x"]["run_current"] %}
    {% set xy_hold = printer.configfile.settings["tmc2209 stepper_x"]["hold_current"] %}
    {% set z_run   = printer.configfile.settings["tmc2209 stepper_z"]["run_current"] %}
    {% set z_hold  = printer.configfile.settings["tmc2209 stepper_z"]["hold_current"] %}
  {% endif %}
  {% if val != printer["gcode_macro _SET_Z_CURRENT"].last_val  %}
    SET_GCODE_VARIABLE MACRO=_SET_Z_CURRENT VARIABLE=last_val VALUE='"{val}"'
    {action_respond_info("Home&Probe: xyRunCur %.2fA rms xyHoldCur %.2fA rms zRunCur %.2fA rms zHoldCur %.2fA rms" % (xy_run|float, xy_hold|float, z_run|float, z_hold|float))}
    SET_TMC_CURRENT STEPPER=stepper_x  CURRENT={xy_run} HOLDCURRENT={xy_hold}
    SET_TMC_CURRENT STEPPER=stepper_y  CURRENT={xy_run} HOLDCURRENT={xy_hold}
    SET_TMC_CURRENT STEPPER=stepper_z  CURRENT={z_run} HOLDCURRENT={z_hold}
    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={z_run} HOLDCURRENT={z_hold}
    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={z_run} HOLDCURRENT={z_hold}
    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={z_run} HOLDCURRENT={z_hold}
    M400
  {% endif %}

