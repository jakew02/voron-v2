#############################################################################
# Dockable probe macros highly inspired from https://github.com/jlas1/Klicky-Probe
# Reworked by Elpopo and myself to simplify it while trying to stay generic
#############################################################################

[gcode_macro _EXIT_POINT]
gcode:
    {% set function  = 'pre_' ~ params.FUNCTION %}
    {% set move  = params.MOVE|default(0) %}
    {% set speed  = params.MOVE_SPEED|default(0) %}
    RESTORE_GCODE_STATE NAME={function} MOVE={move} MOVE_SPEED={speed}

[gcode_macro _ENTRY_POINT]
gcode:
    {% set function  = 'pre_' ~ params.FUNCTION %}
    SAVE_GCODE_STATE NAME={function}
    # all the macros initially assume absolute positioning
    G90

[gcode_macro PROBE_CALIBRATE]
rename_existing: _BASE_PROBE_CALIBRATE
description: Calibrate the probe z_offset
gcode:
    {% set probe_min_z_travel = printer["gcode_macro _USER_VARIABLES"].probe_min_z_travel|float %}
    {% set z_drop_speed = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}
    {% set travel_speed = printer["gcode_macro _USER_VARIABLES"].travel_speed %}

    {% if not 'xyz' in printer.toolhead.homed_axes %}
        { action_raise_error("Must home axis first!") }
    {% endif %}

    # Go to Z safe distance before saving location in order to
    # avoid crashing the probe on the bed when coming back
    {% if (printer.toolhead.position.z < probe_min_z_travel) %}
        G0 Z{probe_min_z_travel} F{z_drop_speed}
    {% endif %}

    M400 #mandatory if we want to save right position
    _ENTRY_POINT FUNCTION=PROBE_CALIBRATE

    # Restore nozzle location to probe the right place
    _EXIT_POINT FUNCTION=PROBE_CALIBRATE MOVE=1 MOVE_SPEED={travel_speed}

    _BASE_PROBE_CALIBRATE {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
           endfor %}
    
    # Restore nozzle location again at the end
    _EXIT_POINT FUNCTION=PROBE_CALIBRATE MOVE=1 MOVE_SPEED={travel_speed}


[gcode_macro PROBE_ACCURACY]
rename_existing: _BASE_PROBE_ACCURACY
description: Probe Z-height accuracy at current XY position
gcode:
    {% set probe_min_z_travel = printer["gcode_macro _USER_VARIABLES"].probe_min_z_travel|float %}
    {% set z_drop_speed = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}
    {% set travel_speed = printer["gcode_macro _USER_VARIABLES"].travel_speed %}

    {% if not 'xyz' in printer.toolhead.homed_axes %}
        { action_raise_error("Must home axis first!") }
    {% endif %}

    # Go to Z safe distance before saving location in order to
    # avoid crashing the probe on the bed when coming back
    {% if (printer.toolhead.position.z < probe_min_z_travel) %}
        G0 Z{probe_min_z_travel} F{z_drop_speed}
    {% endif %}

    M400 #mandatory if we want to save right position
    _ENTRY_POINT FUNCTION=PROBE_ACCURACY

    # Restore nozzle location to probe the right place
    _EXIT_POINT FUNCTION=PROBE_ACCURACY MOVE=1 MOVE_SPEED={travel_speed}

    _BASE_PROBE_ACCURACY {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
           endfor %}

    # Restore nozzle location again at the end
    _EXIT_POINT FUNCTION=PROBE_ACCURACY MOVE=1 MOVE_SPEED={travel_speed}
